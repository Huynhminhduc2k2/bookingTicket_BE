# Use root/example as user/password credentials
version: '3.8'

services:
  # app: 
  #   build: .
  #   restart: always
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - .:/app
  #   networks:
  #     - node-network
  #   depends_on:
  #     - mongo
  #     - redis
  redis:
    image: 7.2.4-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - cache:/data
    networks:
      - node-network

  mongo:
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: bookingTicket
    ports:
      - 27017:27017
    volumes:
      - dbdata6:/data/db
      - ./db/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    networks:
      - node-network

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://root:password@mongo:27017/
    networks:
      - node-network
volumes:
  dbdata6:
  cache:
networks:
  node-network:
    driver: bridge