# Use root/example as user/password credentials
version: '3.8'

services:
  # app: 
  #   build: .
  #   restart: always
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - .:/app
  #   networks:
  #     - node-network
  #   depends_on:
  #     - mongo
  #     - redis
  redis:
    image: redis:7.2.4-alpine
    restart: always
    ports:
      - '6379:6379'
    volumes: 
      - cache:/data
    networks:
      - node-network

  mongo:
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: bookingTicket
    ports:
      - 27017:27017
    volumes:
      - dbdata6:/data/db
      - ./db/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    networks:
      - node-network

  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: user
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: password
  #     ME_CONFIG_MONGODB_URL: mongodb://user:password@mongo:27017/
  #     ME_CONFIG_BASICAUTH_USERNAME: admin
  #     ME_CONFIG_BASICAUTH_PASSWORD: admin
  #     ME_CONFIG_MONGODB_SERVER: mongo
  #   depends_on:
  #     - mongo
  #   networks:
  #     - node-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    container_name: elasticsearch
    environment:
      cluster.name: docker-cluster
      network.host: 0.0.0.0
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      discovery.type: single-node
      xpack.security.enabled: false
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - node-network
    restart: unless-stopped
  kibana:
    image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    networks:
      - node-network
    depends_on: ['elasticsearch']
  logstash:
    image: docker.elastic.co/logstash/logstash:${ELASTIC_VERSION}
    container_name: logstash
    ports:
      - 9600:9600
    links:
      - elasticsearch:elasticsearch
    environment:
      HOST_IP: localhost
      LS_JAVA_OPTS: '-Xmx256m -Xms256m'
    networks:
      - node-network
    depends_on: ['elasticsearch']
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      # - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro,Z
      # - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    restart: unless-stopped
volumes:
  dbdata6:
  cache:
networks:
  node-network:
    driver: bridge